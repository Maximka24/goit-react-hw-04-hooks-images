{"version":3,"sources":["Components/GetImg/GetImg.module.css","Components/DownloadImg/DownloadImg.module.css","Components/ModalImg/ModalImg.module.css","Components/ImgContainer/ImgContainer.module.css","Components/GetImg/GetImg.jsx","Components/DownloadImg/DownloadImg.jsx","Components/ModalImg/ModalImg.jsx","Components/ImgItem/ImgItem.jsx","Components/ImgContainer/ImgContainer.jsx","Api/Api.js","Components/App.js","index.js","Components/ImgItem/ImgItem.module.css"],"names":["module","exports","GetImg","onSubmit","useState","nameImg","setNameImg","className","s","GetContainer","event","preventDefault","trim","alert","BtnForm","type","style","width","height","placeholder","name","value","onChange","currentTarget","toLowerCase","pattern","title","DownloadImg","nameImgState","onClickPageState","DownloadContainer","DownloadBtnImg","onClick","modalRoot","document","querySelector","ModalImg","onClose","children","useEffect","window","addEventListener","handleClickKeyDown","e","code","createPortal","id","Overlay","target","Modal","ImageItem","imgName","imgList","onClickToggleModal","onClickOpenModal","ImageGallery","map","webformatURL","ImageGalleryItem","ImageGalleryItemImage","src","alt","ImgContainer","toggleModal","modalRendImg","targetImg","showModal","statusLoad","imgStatus","errorApi","color","fetchApi","a","pageImg","axios","get","res","data","hits","AppHook","setImgList","setPageImg","status","setStatus","setTargetImg","error","setError","setStatusLoad","setShowModal","renderMainGetRequest","renderAdditionalGetRequest","option","Api","then","img","catch","finally","prevState","scrollToTarget","scrollTo","top","documentElement","scrollHeight","behavior","getNameImg","prevPage","currentSrc","state","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50091726.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GetContainer\":\"GetImg_GetContainer___4ULB\",\"BtnForm\":\"GetImg_BtnForm__M_LKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DownloadContainer\":\"DownloadImg_DownloadContainer__1x3Y-\",\"DownloadBtnImg\":\"DownloadImg_DownloadBtnImg__2veQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"ModalImg_Overlay__3ro9e\",\"Modal\":\"ModalImg_Modal__1dG33\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImgContainer\":\"ImgContainer_ImgContainer__2vtBM\"};","import { useState } from \"react\";\nimport { BiSearch } from \"react-icons/bi\";\n\nimport PropTypes from \"prop-types\";\n\nimport s from \"./GetImg.module.css\";\n\nexport default function GetImg({ onSubmit }) {\n  const [nameImg, setNameImg] = useState(\"\");\n\n  const handleNameChangeInput = (event) => {\n    setNameImg(event.currentTarget.value.toLowerCase());\n  };\n\n  const handelSubmitForm = (event) => {\n    event.preventDefault();\n\n    if (nameImg.trim() === \"\") {\n      return alert(\"Введите название картинки!\");\n    }\n\n    onSubmit(nameImg);\n    setNameImg(\"\");\n  };\n\n  return (\n    <div className={s.GetContainer}>\n      <form onSubmit={handelSubmitForm}>\n        <button className={s.BtnForm} type=\"submit\">\n          <BiSearch style={{ width: 24, height: 24 }} />\n        </button>\n        <input\n          type=\"tel\"\n          placeholder=\"Search images...\"\n          name=\"number\"\n          value={nameImg}\n          onChange={handleNameChangeInput}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Наименование изображения может состоять только из букв!!!\"\n          // required\n        />\n      </form>\n    </div>\n  );\n}\n\nGetImg.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nimport s from \"./DownloadImg.module.css\";\n\nexport default function DownloadImg({ nameImgState, onClickPageState }) {\n  return (\n    <div className={s.DownloadContainer}>\n      {nameImgState !== \"\" && (\n        <button className={s.DownloadBtnImg} onClick={onClickPageState}>\n          Add image\n        </button>\n      )}\n    </div>\n  );\n}\n\nDownloadImg.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import {useEffect} from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport s from \"./ModalImg.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nexport default function ModalImg({ onClose, children}) {\n  \n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleClickKeyDown);\n  })  \n  \n\n  const handleClickKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      onClose();\n    }\n  };\n\n  const handleClickBackDrop = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n\n  return createPortal(\n      <div\n        id=\"Overlay\"\n        className={s.Overlay}\n        onClick={handleClickBackDrop}\n      >\n        <div className={s.Modal}>{children}</div>\n      </div>,\n      modalRoot\n    );\n};\n\n\n","import PropTypes from \"prop-types\";\n\nimport s from \"./ImgItem.module.css\";\n\nexport default function ImageItem({\n  imgName,\n  imgList,\n  onClickToggleModal,\n  onClickOpenModal,\n}) {\n  return (\n    <ul className={s.ImageGallery} onClick={onClickOpenModal}>\n      {imgList.map(({ id, webformatURL }) => (\n        <li\n          key={id}\n          className={s.ImageGalleryItem}\n          onClick={onClickToggleModal}\n        >\n          <img\n            className={s.ImageGalleryItemImage}\n            src={webformatURL}\n            alt={`Картинка по запросу ${imgName}`}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nImageItem.propTypes = {\n  onClickOpenModal: PropTypes.func,\n  onClickToggleModal: PropTypes.func,\n  imgName: PropTypes.string.isRequired,\n  imgList: PropTypes.array,\n};\n","import PropTypes from \"prop-types\";\n\nimport DownloadImg from \"../DownloadImg/DownloadImg\";\nimport ModalImg from \"../ModalImg/ModalImg\";\nimport ImageItem from \"../ImgItem/ImgItem\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nimport s from \"./ImgContainer.module.css\";\n\nexport default function ImgContainer({\n  imgList,\n  toggleModal,\n  modalRendImg,\n  onClickPageState,\n  targetImg,\n  showModal,\n  statusLoad,\n  imgName,\n  imgStatus,\n  errorApi,\n}) {\n  if (imgStatus === \"idle\") {\n    return <div className={s.ImgContainer}>Введите запросы в поле выше!! </div>;\n  }\n\n  if (imgStatus === \"error\") {\n    return <h1 className={s.ImgContainer}> {errorApi} </h1>;\n  }\n\n  if (imgStatus === \"load\") {\n    return (\n      <div className={s.ImgContainer}>\n        <Loader type=\"Oval\" color=\"#00BFFF\" height={50} width={50} />\n      </div>\n    );\n  }\n\n  if (imgStatus === \"resolved\") {\n    return (\n      <>\n        {imgList && (\n          <ImageItem\n            imgName={imgName}\n            imgList={imgList}\n            onClickOpenModal={modalRendImg}\n            onClickToggleModal={toggleModal}\n          />\n        )}\n        {statusLoad && (\n          <div className={s.ImgContainer}>\n            <Loader type=\"Oval\" color=\"#00BFFF\" height={50} width={50} />\n          </div>\n        )}\n\n        <DownloadImg\n          nameImgState={imgName}\n          onClickPageState={() => {\n            onClickPageState();\n          }}\n        />\n\n        {showModal && (\n          <ModalImg onClose={toggleModal}>\n            <img src={targetImg} alt={`Картинка по запросу ${imgName}`} />\n          </ModalImg>\n        )}\n      </>\n    );\n  }\n}\n\nImgContainer.propTypes = {\n  onClickPageState: PropTypes.func.isRequired,\n  modalRendImg: PropTypes.func.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  imgName: PropTypes.string.isRequired,\n  imgList: PropTypes.array.isRequired,\n  imgStatus: PropTypes.string.isRequired,\n  statusLoad: PropTypes.bool.isRequired,\n  showModal: PropTypes.bool.isRequired,\n};\n","import axios from \"axios\";\n\nconst IMG_Get_API = \"https://pixabay.com/api/\";\nconst KEY_API = \"22248336-3f9f08778186b55c7ac32d168\";\n\nconst fetchApi = async ({ nameImg, pageImg }) => {\n  const res = await axios.get(\n    `${IMG_Get_API}?q=${nameImg}&page=${pageImg}&key=${KEY_API}&image_type=photo&orientation=horizontal&per_page=12`\n  );\n  return res.data.hits;\n};\n\nexport default { fetchApi };\n","import { useState, useEffect } from \"react\";\n\nimport GetImg from \"./GetImg/GetImg.jsx\";\nimport ImgContainer from \"./ImgContainer/ImgContainer.jsx\";\nimport Api from \"../Api/Api\";\n\nexport default function AppHook() {\n  const [imgList, setImgList] = useState([]);\n  const [nameImg, setNameImg] = useState(\"\");\n  const [pageImg, setPageImg] = useState(1);\n  const [status, setStatus] = useState(\"idle\");\n  const [targetImg, setTargetImg] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [statusLoad, setStatusLoad] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (nameImg === \"\") {\n      return;\n    }\n    \n    renderMainGetRequest();    \n  }, [nameImg]);\n\n  useEffect(() => {\n    if (pageImg === 1) {\n      return;\n    }\n\n    renderAdditionalGetRequest();    \n  }, [pageImg]);\n\n  const renderMainGetRequest = () => {\n    setStatus(\"load\");\n\n    const option = { nameImg, pageImg }\n    \n    Api.fetchApi(option)\n      .then((img) => setImgList(img))\n      .catch((error) => setError(error))\n      .finally(() => setStatus(\"resolved\"));\n  };\n\n  const renderAdditionalGetRequest = () => {\n    const option = { nameImg, pageImg }\n\n    setStatusLoad(true);\n\n    Api.fetchApi(option)\n      .then((img) => setImgList((prevState) => [...prevState, ...img]))\n      .then(scrollToTarget)\n      .catch((error) => setError(error))\n      .finally(() => setStatusLoad(false));\n  };\n\n  const onSubmitNameState = (getNameImg) => {\n    setImgList([]);\n    setNameImg(getNameImg);\n    setPageImg(1);\n  };\n\n  const onClickPageState = () => {\n    setPageImg((prevPage) => prevPage + 1);\n  };\n\n  const scrollToTarget = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  const modalRendImg = (e) => {\n    if (e.target !== e.currentTarget) {\n      setTargetImg(e.target.currentSrc);\n    }\n  };\n\n  const toggleModal = () => {\n    setShowModal((state) => !state);\n  };\n\n  return (\n    <div className=\"App\">\n      <GetImg onSubmit={onSubmitNameState} />\n\n      <ImgContainer\n        imgList={imgList}\n        imgName={nameImg}\n        imgStatus={status}\n        errorApi={error}\n        statusLoad={statusLoad}\n        showModal={showModal}\n        targetImg={targetImg}\n        onClickPageState={onClickPageState}\n        modalRendImg={modalRendImg}\n        toggleModal={toggleModal}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.module.css\";\n\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImgContainer\":\"ImgItem_ImgContainer__3ebJi\",\"ImageGallery\":\"ImgItem_ImageGallery__1QTYk\",\"ImageGalleryItem\":\"ImgItem_ImageGalleryItem__x9RtM\",\"ImageGalleryItemImage\":\"ImgItem_ImageGalleryItemImage__2g9uo\"};"],"sourceRoot":""}