{"version":3,"sources":["Components/GetImg/GetImg.module.css","Components/DownloadImg/DownloadImg.module.css","Components/ModalImg/ModalImg.module.css","Components/ImgContainer/ImgContainer.module.css","Components/GetImg/GetImg.jsx","Components/DownloadImg/DownloadImg.jsx","Components/ModalImg/ModalImg.jsx","Components/ImgItem/ImgItem.jsx","Components/ImgContainer/ImgContainer.jsx","Api/Api.js","Components/AppHook.js","index.js","Components/ImgItem/ImgItem.module.css"],"names":["module","exports","GetImg","onSubmit","useState","nameImg","setNameImg","className","s","GetContainer","event","preventDefault","trim","alert","BtnForm","type","style","width","height","placeholder","name","value","onChange","currentTarget","toLowerCase","pattern","title","DownloadImg","nameImgState","onClickPageState","DownloadContainer","DownloadBtnImg","onClick","modalRoot","document","querySelector","ModalImg","handleClickKeyDown","e","code","props","onClose","handleClickBackDrop","target","window","addEventListener","this","removeEventListener","createPortal","id","Overlay","Modal","children","Component","ImageItem","imgName","imgList","onClickToggleModal","onClickOpenModal","ImageGallery","map","webformatURL","ImageGalleryItem","ImageGalleryItemImage","src","alt","ImgContainer","toggleModal","modalRendImg","targetImg","showModal","statusLoad","imgStatus","errorApi","color","fetchApi","a","pageImg","axios","get","res","data","hits","AppHook","setImgList","setPageImg","status","setStatus","setTargetImg","error","setError","setStatusLoad","setShowModal","useEffect","Api","then","img","catch","finally","prevState","scrollToTarget","scrollTo","top","documentElement","scrollHeight","behavior","getNameImg","prevPage","currentSrc","state","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4322550.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GetContainer\":\"GetImg_GetContainer___4ULB\",\"BtnForm\":\"GetImg_BtnForm__M_LKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DownloadContainer\":\"DownloadImg_DownloadContainer__1x3Y-\",\"DownloadBtnImg\":\"DownloadImg_DownloadBtnImg__2veQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"ModalImg_Overlay__3ro9e\",\"Modal\":\"ModalImg_Modal__1dG33\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImgContainer\":\"ImgContainer_ImgContainer__2vtBM\"};","import {useState} from \"react\";\nimport { BiSearch } from \"react-icons/bi\";\n\nimport PropTypes from \"prop-types\";\n\nimport s from \"./GetImg.module.css\";\n\nexport default function GetImg({ onSubmit }) {\n  const [nameImg, setNameImg] = useState('')\n \n\n  const handleNameChangeInput = (event) => {\n    setNameImg(event.currentTarget.value.toLowerCase());\n  };\n\n  const handelSubmitForm = (event) => {\n    event.preventDefault();\n\n    if (nameImg.trim() === \"\") {\n      return alert(\"Введите название картинки!\");\n    }\n\n    onSubmit(nameImg);\n    setNameImg('');\n  };\n\n  return (\n      <div className={s.GetContainer}>\n        <form onSubmit={handelSubmitForm}>\n          <button className={s.BtnForm} type=\"submit\">\n            <BiSearch style={{ width: 24, height: 24 }} />\n          </button>\n          <input\n            type=\"tel\"\n            placeholder=\"Search images...\"\n            name=\"number\"\n            value={nameImg}\n            onChange={handleNameChangeInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Наименование изображения может состоять только из букв!!!\"\n            // required\n          />\n        </form>\n      </div>\n    );\n}\n\nGetImg.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","\nimport PropTypes from \"prop-types\";\n\nimport s from \"./DownloadImg.module.css\";\n\nexport default function DownloadImg({nameImgState, onClickPageState}) {\n  \n  return (\n      <div className={s.DownloadContainer}>\n        {nameImgState !== \"\" && (\n          <button\n            className={s.DownloadBtnImg}\n            onClick={onClickPageState}\n          >\n            Add image\n          </button>\n        )}\n      </div>\n    );\n}\n\nDownloadImg.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport s from \"./ModalImg.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n// const backDrop = document.querySelector('#Overlay')\n\nexport default class ModalImg extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleClickKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleClickKeyDown);\n  }\n\n  handleClickKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  handleClickBackDrop = (e) => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div\n        id=\"Overlay\"\n        className={s.Overlay}\n        onClick={this.handleClickBackDrop}\n      >\n        <div className={s.Modal}>{this.props.children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n","\nimport PropTypes from \"prop-types\";\n\nimport s from \"./ImgItem.module.css\";\n\nexport default function ImageItem({imgName, imgList, onClickToggleModal, onClickOpenModal }) {\n  return (\n      <ul className={s.ImageGallery} onClick={onClickOpenModal}>\n        {imgList.map(({ id, webformatURL }) => (\n          <li\n            key={id}\n            className={s.ImageGalleryItem}\n            onClick={onClickToggleModal}\n          >\n            <img\n              className={s.ImageGalleryItemImage}\n              src={webformatURL}\n              alt={`Картинка по запросу ${imgName}`}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n}\n\nImageItem.propTypes = {\n  onClickOpenModal: PropTypes.func,\n  onClickToggleModal: PropTypes.func,\n  imgName: PropTypes.string.isRequired,\n  imgList: PropTypes.array,\n};\n","\nimport PropTypes from \"prop-types\";\n\nimport DownloadImg from \"../DownloadImg/DownloadImg\";\nimport ModalImg from \"../ModalImg/ModalImg\";\nimport ImageItem from \"../ImgItem/ImgItem\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nimport s from \"./ImgContainer.module.css\";\n\nexport default function ImgContainer({imgList, toggleModal, modalRendImg, onClickPageState, targetImg, showModal, statusLoad, imgName, imgStatus, errorApi }) {\n  if (imgStatus === \"idle\") {\n      return (\n        <div className={s.ImgContainer}>Введите запросы в поле выше!! </div>\n      );\n    }\n\n    if (imgStatus === \"error\") {\n      return (\n        <h1 className={s.ImgContainer}> {errorApi} </h1>\n      );\n    }\n\n    if (imgStatus === 'load') {\n      return (\n        <div className={s.ImgContainer}>\n          <Loader type=\"Oval\" color=\"#00BFFF\" height={50} width={50} />\n        </div>\n      );\n    }\n\n    if (imgStatus === \"resolved\") {\n      return (\n        <>\n          {imgList && (\n            <ImageItem\n              imgName={imgName}\n              imgList={imgList}\n              onClickOpenModal={modalRendImg}\n              onClickToggleModal={toggleModal}\n            />\n          )}\n          {statusLoad && (\n            <div className={s.ImgContainer}>\n              <Loader type=\"Oval\" color=\"#00BFFF\" height={50} width={50} />\n            </div>\n          )}\n\n          <DownloadImg\n            nameImgState={imgName}\n            onClickPageState={() => {\n              onClickPageState();\n            }}\n          />\n\n          {showModal && (\n            <ModalImg onClose={toggleModal}>\n              <img\n                src={targetImg}\n                alt={`Картинка по запросу ${imgName}`}\n              />\n            </ModalImg>\n          )}\n        </>\n      );\n    \n  }\n    \n}\n\nImgContainer.propTypes = {\n  onClickPageState: PropTypes.func.isRequired,\n  modalRendImg: PropTypes.func.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  imgName: PropTypes.string.isRequired,\n  imgList: PropTypes.array.isRequired,\n  imgStatus: PropTypes.string.isRequired,\n  statusLoad: PropTypes.bool.isRequired,\n  showModal: PropTypes.bool.isRequired,\n};\n","import axios from \"axios\";\r\n\r\n// import PropTypes from \"prop-types\";\r\n\r\nconst IMG_Get_API = \"https://pixabay.com/api/\";\r\nconst KEY_API = \"22248336-3f9f08778186b55c7ac32d168\";\r\n\r\nconst fetchApi =  async ({ nameImg, pageImg }) => {\r\n\tconst res = await axios\r\n\t\t.get(`${IMG_Get_API}?q=${nameImg}&page=${pageImg}&key=${KEY_API}&image_type=photo&orientation=horizontal&per_page=12`);\r\n\treturn res.data.hits;\r\n\t\t\r\n};\r\n\r\n// fetchApi.propTypes = {\r\n//   nameImg: PropTypes.string.isRequired,\r\n//   pageImg: PropTypes.number.isRequired,\r\n// };\r\n\r\nexport default { fetchApi };\r\n\r\n","import  { useState, useEffect } from \"react\";\n\nimport GetImg from \"./GetImg/GetImg.jsx\";\nimport ImgContainer from \"./ImgContainer/ImgContainer.jsx\";\nimport Api from '../Api/Api';\n\n\nexport default function AppHook() {\n  const [imgList, setImgList] = useState([]);\n  const [nameImg, setNameImg] = useState('');\n  const [pageImg, setPageImg] = useState(1);\n  const [status, setStatus] = useState('idle');\n  const [targetImg, setTargetImg] = useState('');\n  const [error, setError] = useState(null);\n  const [statusLoad, setStatusLoad] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n\n  useEffect(() => {\n    if (nameImg === '') {\n      return;\n    };\n\n    setStatus(\"load\");\n\n    Api\n      .fetchApi({ nameImg, pageImg })\n      .then((img) => \n        setImgList(img),        \n      )\n      .catch((error) =>\n        setError(error),\n      )\n      .finally(() => setStatus(\"resolved\"))\n  }, [nameImg]);\n\n  useEffect(() => {\n    if (pageImg === 1) {\n      return;\n    }\n\n    setStatusLoad(true);\n\n    Api\n      .fetchApi({ nameImg, pageImg })\n      .then((img) => \n        setImgList((prevState) => [...prevState, ...img])        \n      )\n      .then(scrollToTarget)\n      .catch((error) =>\n        setError(error),\n      )\n      .finally(() => setStatusLoad(false))\n  }, [pageImg]);\n\n\n  const onSubmitNameState = (getNameImg) => {\n    setImgList([]);\n    setNameImg(getNameImg);\n    setPageImg(1);\n  };\n\n  const onClickPageState = () => {\n    setPageImg((prevPage) => prevPage + 1);\n  };\n\n  const scrollToTarget = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  const modalRendImg = (e) => {\n    if (e.target !== e.currentTarget) {\n      setTargetImg(e.target.currentSrc);\n    }\n  };\n\n  const toggleModal = () => {\n    setShowModal((state) => !state);\n  };\n\n  return (\n      <div className=\"App\">\n        <GetImg onSubmit={onSubmitNameState} />\n\n        <ImgContainer\n          imgList={imgList}\n          imgName={nameImg}\n          imgStatus={status}\n          errorApi={error}\n          statusLoad={statusLoad}\n          showModal={showModal}\n          targetImg={targetImg}\n          onClickPageState={onClickPageState}\n          modalRendImg={modalRendImg}\n          toggleModal={toggleModal}\n        />\n      </div>\n    );\n  \n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.module.css\";\n// import App from \"./Components/AppClass\";\nimport App from \"./Components/AppHook\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImgContainer\":\"ImgItem_ImgContainer__3ebJi\",\"ImageGallery\":\"ImgItem_ImageGallery__1QTYk\",\"ImageGalleryItem\":\"ImgItem_ImageGalleryItem__x9RtM\",\"ImageGalleryItemImage\":\"ImgItem_ImageGalleryItemImage__2g9uo\"};"],"sourceRoot":""}